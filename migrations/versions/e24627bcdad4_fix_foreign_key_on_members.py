"""Fix foreign key on members

Revision ID: e24627bcdad4
Revises: e7f4f1bfdd36
Create Date: 2025-06-03 00:23:48.601997

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e24627bcdad4'
down_revision: Union[str, None] = 'e7f4f1bfdd36'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    conn = op.get_bind()
    if conn.dialect.name == "sqlite":
        with op.batch_alter_table("members", recreate="always") as batch_op:
            batch_op.alter_column(
                "subscription_id", existing_type=sa.INTEGER(), nullable=False
            )
            batch_op.create_foreign_key(
                "fk_members_subscription_id_subscriptions",
                "subscriptions",
                ["subscription_id"],
                ["id"],
            )
    else:
        op.alter_column(
            "members", "subscription_id", existing_type=sa.INTEGER(), nullable=False
        )
        op.create_foreign_key(
            "fk_members_subscription_id_subscriptions",
            "members",
            "subscriptions",
            ["subscription_id"],
            ["id"],
        )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'members', type_='foreignkey')
    op.alter_column('members', 'subscription_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
